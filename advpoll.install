<?php
// $Id$


/**
 * Implementation of hook_install().
 */
function advpoll_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {advpoll} (
        nid int(10) NOT NULL,
        quorum int(10) NOT NULL default '0',
        mode varchar(32) NOT NULL,
        uselist tinyint default '0',
        active tinyint default '1',
        maxchoices int unsigned NOT NULL default '0',
        algorithm VARCHAR(100),
        showvotes tinyint,
        startdate int NOT NULL default '0',
        enddate int NOT NULL default '0',
        writeins tinyint NOT NULL default '0',
        show_writeins tinyint NOT NULL default '0',
        PRIMARY KEY (nid)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */");

      db_query("CREATE TABLE {advpoll_electoral_list} (
        nid int(10) NOT NULL,
        uid int(10) NOT NULL,
        PRIMARY KEY (nid, uid)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */");

      db_query("CREATE TABLE {advpoll_choices} (
        nid int(10) NOT NULL,
        label text NOT NULL,
        vote_offset int(2) unsigned default NULL,
        writein tinyint NOT NULL default '0',
        PRIMARY KEY (nid, vote_offset),
        KEY vote_offset (vote_offset)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */");
      break;

    case 'pgsql':
      db_query("CREATE TABLE {advpoll} (
        nid integer NOT NULL,
        quorum integer NOT NULL DEFAULT '0',
        mode varchar(32) NOT NULL,
        uselist smallint DEFAULT '0',
        active smallint DEFAULT '1',
        maxchoices integer NOT NULL DEFAULT '0',
        algorithm varchar(100),
        showvotes smallint,
        startdate integer NOT NULL DEFAULT '0',
        enddate integer NOT NULL DEFAULT '0',
        writeins smallint NOT NULL DEFAULT '0',
        show_writeins smallint NOT NULL DEFAULT '0',
        PRIMARY KEY (nid)
      )");

      db_query("CREATE TABLE {advpoll_electoral_list} ( 
        nid integer NOT NULL,
        uid integer NOT NULL,
        PRIMARY KEY (nid, uid)   
      )");

      db_query("CREATE TABLE {advpoll_choices} (
        nid integer NOT NULL,
        label text NOT NULL,
        vote_offset smallint DEFAULT NULL,
        writein smallint NOT NULL DEFAULT '0',
        PRIMARY KEY (nid, vote_offset)
      )");
      db_query("CREATE INDEX {advpoll_choices}_vote_offset_idx ON {advpoll_choices} (vote_offset)");
      break;
  }
}

/**
 * Implementation of hook_uninstall().
 */
function advpoll_uninstall() {
  // Needs to be included due to _advpoll_list_modes().
  include_once './'. drupal_get_path('module', 'advpoll') .'/advpoll.module';

  // Remove all advpoll content types.
  foreach (_advpoll_list_modes() as $mode) {
    node_type_delete('advpoll_'. $mode['name']);
  }

  // Remove all votes.
  db_query("DELETE FROM {votingapi_vote} WHERE content_type='advpoll'");

  // Remove all cache data.
  db_query("DELETE FROM {votingapi_cache} WHERE content_type='advpoll'");

  // Remove all advpoll nodes.
  $result = db_query('SELECT nid FROM {advpoll}');
  while ($obj = db_fetch_object($result)) {
    node_delete($obj->nid);
  }

  // Remove all database tables.
  db_query('DROP TABLE {advpoll}');
  db_query('DROP TABLE {advpoll_electoral_list}');
  db_query('DROP TABLE {advpoll_choices}');

  // Remove all variables.
  variable_del('advpoll_default_mode');
  variable_del('advpoll_default_electoral_list');
}

/**
 * Make sure that quorum has a default value of 0.
 */
function advpoll_update_1() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'pgsql':
      // This was fixed for new installs of pgsql, but not upgrades.
      db_change_column($ret, 'advpoll', 'quorum', 'quorum', 'integer', array('not null' => TRUE, 'default' => 0));
      break;
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {advpoll} CHANGE quorum quorum int(10) NOT NULL default '0'");
      break;
  }
  return $ret;  
}

/** 
 * Migrate old global settings to new per-content-type settings.
 */
function advpoll_update_2() {
  $ret = array();
  $variables = array();
  $variables[] = array('name' => 'advpoll_electoral_list', 'old_name' => 'advpoll_default_electoral_list');
  $variables[] = array('name' => 'advpoll_view_results', 'old_name' => 'advpoll_view_results');
  $types = node_get_types();
  foreach ($variables as $variable) {
    if (!is_null($value = variable_get($variable['old_name'], NULL))) {
      foreach ($types as $type) {
        if ($type->module == 'advpoll') {
          variable_set($variable['name'] .'_'. $type->type, $value);
        }
      }
    }
    variable_del($variable['old_name']);
  }
  return $ret;
}

/**
 * Switch date handling from a duration to an enddate.
 */
function advpoll_update_3() {
  $ret = array();
  
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      // New default '0' instead of NULL for startdate
      $ret[] = update_sql("ALTER TABLE {advpoll} CHANGE startdate startdate int NOT NULL DEFAULT '0'");
      $ret[] = update_sql("UPDATE {advpoll} SET startdate = 0 WHERE startdate IS NULL");
      // Add the new column.
      $ret[] = update_sql("ALTER TABLE {advpoll} ADD COLUMN enddate int NOT NULL default '0' AFTER startdate");
      // Calculate the new value.
      $ret[] = update_sql("UPDATE {advpoll} SET enddate = startdate + runtime WHERE runtime != 0");
      // Drop the old column.
      $ret[] = update_sql("ALTER TABLE {advpoll} DROP COLUMN runtime");
      break;
    
    case 'pgsql':
      // New default '0' instead of NULL for startdate
      db_change_column($ret, 'advpoll', 'startdate', 'startdate', 'integer', array('not null' => TRUE, 'default' => '0'));
      $ret[] = update_sql("UPDATE {advpoll} SET startdate = 0 WHERE startdate IS NULL");
      // Add the new column.
      db_add_column($ret, 'advpoll', 'enddate', 'integer', array('not null' => TRUE, 'default' => '0'));
      // Calculate the new value.
      $ret[] = update_sql("UPDATE {advpoll} SET enddate = startdate + runtime WHERE runtime != 0");
      // Drop the old column.
      db_drop_column($ret, 'advpoll', 'runtime');
      break;
  }
  return $ret;
}

/**
 * Add columns for write-in support.
 */
function advpoll_update_4() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {advpoll} ADD writeins TINYINT NOT NULL DEFAULT '0'");
      $ret[] = update_sql("ALTER TABLE {advpoll} ADD show_writeins TINYINT NOT NULL DEFAULT '0'");
      $ret[] = update_sql("ALTER TABLE {advpoll_choices} ADD writein TINYINT NOT NULL DEFAULT '0'");
      break;
    case 'pgsql':
      db_add_column($ret, 'advpoll', 'writeins', 'smallint', array('default' => 0, 'not null' => TRUE));
      db_add_column($ret, 'advpoll', 'show_writeins', 'smallint', array('default' => 0, 'not null' => TRUE));
      db_add_column($ret, 'advpoll_choices', 'writein', 'smallint', array('default' => 0, 'not null' => TRUE));
      break;    
  }
  return $ret;
}
